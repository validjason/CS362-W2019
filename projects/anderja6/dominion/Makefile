CFLAGS= -Wall -fpic -coverage -lm -std=c99

rngs.o: rngs.h rngs.c
	gcc -c rngs.c -g  $(CFLAGS)

dominion.o: dominion.h dominion.c rngs.o
	gcc -c dominion.c -g  $(CFLAGS)

playdom: dominion.o playdom.c
	gcc -o playdom playdom.c -g dominion.o rngs.o $(CFLAGS)
#To run playdom you need to entere: ./playdom <any integer number> like ./playdom 10*/
testDrawCard: testDrawCard.c dominion.o rngs.o
	gcc  -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

badTestDrawCard: badTestDrawCard.c dominion.o rngs.o
	gcc -o badTestDrawCard -g  badTestDrawCard.c dominion.o rngs.o $(CFLAGS)

testBuyCard: testDrawCard.c dominion.o rngs.o
	gcc -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

testAll: dominion.o testSuite.c
	gcc -o testSuite testSuite.c -g  dominion.o rngs.o $(CFLAGS)

interface.o: interface.h interface.c
	gcc -c interface.c -g  $(CFLAGS)

runtests: testDrawCard 
	./testDrawCard &> unittestresult.out
	gcov dominion.c >> unittestresult.out
	cat dominion.c.gcov >> unittestresult.out

#add other tests
#unittestresults:
#	gcc -c rngs.c -g  $(CFLAGS)
#	gcc -c dominion.c -g  $(CFLAGS)
#	gcc -o unittestresults unittest2.c -g dominion.o rngs.o $(CFLAGS)
#	./unittestresults &> unittestresults.out
#	gcov dominion.c >> unittestresults.out

unittestresults: unittest1.c unittest2.c dominion.c rngs.c

	echo "Result for running dominion tests:" > unittestresults.out

	echo "unittest1.c:" >> unittestresults.out
	gcc -o unittestresults unittest1.c dominion.c rngs.c -g $(CFLAGS)
	./unittestresults >> unittestresults.out
	gcov dominion.c >> unittestresults.out
	
	echo "unittest2.c:" >> unittestresults.out
	gcc -o unittestresults unittest2.c dominion.c rngs.c -g $(CFLAGS)
	./unittestresults >> unittestresults.out
	gcov dominion.c >> unittestresults.out
	
	echo "unittest3.c:" >> unittestresults.out
	gcc -o unittestresults unittest3.c dominion.c rngs.c -g $(CFLAGS)
	./unittestresults >> unittestresults.out
	gcov dominion.c >> unittestresults.out

	echo "unittest4.c:" >> unittestresults.out
	gcc -o unittestresults unittest4.c dominion.c rngs.c -g $(CFLAGS)
	./unittestresults >> unittestresults.out
	gcov dominion.c >> unittestresults.out

	echo "cardtest1.c:" >> unittestresults.out
	gcc -o unittestresults cardtest1.c dominion.c rngs.c -g $(CFLAGS)
	./unittestresults >> unittestresults.out
	gcov dominion.c >> unittestresults.out

	echo "cardtest2.c:" >> unittestresults.out
	gcc -o unittestresults cardtest2.c dominion.c rngs.c -g $(CFLAGS)
	./unittestresults >> unittestresults.out
	gcov dominion.c >> unittestresults.out

	echo "cardtest3.c:" >> unittestresults.out
	gcc -o unittestresults cardtest3.c dominion.c rngs.c -g $(CFLAGS)
	./unittestresults >> unittestresults.out
	gcov dominion.c >> unittestresults.out

	clear;
	cat unittestresults.out;
player: player.c interface.o
	gcc -o player player.c -g  dominion.o rngs.o interface.o $(CFLAGS)

all: playdom player 

clean:
	rm -f *.o playdom.exe playdom player player.exe unittestresults *.out *.gcov *.gcda *.gcno *.so *.out testDrawCard testDrawCard.exe
